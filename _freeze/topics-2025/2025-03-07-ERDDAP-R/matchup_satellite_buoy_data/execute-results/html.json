{
  "hash": "e0e41e379187e679c0e0c7886122eb95",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Match up satellite to buoy data\"\nauthor: \"NOAA CoastWatch, modified by Sunny Hospital, Daisy Hui, Eli Holmes\"\ndate: \"March 2025\"\noutput:\n  html_document:\n    variant: gfm\n  pdf_document: default\n---\n\n::: {.cell}\n\n:::\n\n\n  \n# Match up satellite and buoy data\n> history | Updated March 2025\n\nToday we will work on R code that combine satellite data and buoy data.\n\n## Background\n\nThere are buoys in many locations around the world that provide data streams of oceanic and atmospheric parameters. In situ buoy data are widely used to monitor environmental conditions.  In situ buoy data are often used as ground truth to assess the accuracy of satellite observations.\n\n\n**Tabular data (buoy data)** - data  are organized in columns and rows (e.g, observation, record, survey)\n\n![](images/tabular_data.png)\n\n\n**Gridded data (satellite)** - Data are arranged on a regularly spaced grid (e.g., geospatial data, temperature, chlorophyll).\n\n![](images/gridded_data.png)\n\n## Objective\nIn this exercise, will combine satellite data and in situ buoy data using `rerddap` and `rxtracto` R packages.\n\n## Datasets used:\n  \n-  <a href=\"https://coastwatch.pfeg.noaa.gov/erddap/griddap/nesdisBLENDEDsstDNDaily.graph\">The sea surface temperature (SST) satellite data</a> from the NOAA Geo-polar blended analysis, Daily\n-  <a href=\"https://coastwatch.pfeg.noaa.gov/erddap/tabledap/cwwcNDBCMet.graph?time%2Cwtmp%2Cwd&station=%2246259%22&time%3E=2020-09-15T00%3A00%3A00Z&time%3C=2022-09-15T00%3A00%3A00Z&.draw=markers&.marker=5%7C5&.color=0x000000&.colorBar=%7C%7C%7C%7C%7C&.bgColor=0xffccccff\"> The NDBC Standard Meteorological Buoy Data (dataset ID: cwwcNDBCMet) </a> is used for validating or ground truthing the satellite SST data\n\n\n## The exercise demonstrates the following techniques:\n  \n* Downloading tabular data (buoy data) from CoastWatch ERDDAP data server\n* Subsetting satellite data within a rectangular boundary\n* Matching satellite data with the buoy data\n* Running statistical analysis to compare buoy and satellite data\n* Producing satellite maps and overlaying buoy data\n\n\n## Install required packages and load libraries  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to check missing packages, install and load \n\npkgTest <- function(x)\n{\n  if (!require(x,character.only = TRUE))\n  {\n    install.packages(x, dep=TRUE, repos = \"https://cloud.r-project.org/\")\n    if(!require(x,character.only = TRUE)) stop(\"Package not found\")\n  }\n}\n\nlist.of.packages <- c( \"ncdf4\", \"rerddap\", \"plotdap\", \"httr\",\n                       \"lubridate\", \"gridGraphics\",  \"mapdata\",\n                       \"ggplot2\", \"RColorBrewer\", \"grid\", \"PBSmapping\", \n                       \"rerddapXtracto\",\"dplyr\",\"viridis\",\"cmocean\")\n\n# create list of installed packages\npkges = installed.packages()[,\"Package\"]\n\nfor (pk in list.of.packages) {\n  pkgTest(pk)\n}\n```\n:::\n\n\n\n## Downloading buoy data from ERDDAP using `rerddap::tabledap`  \n**Extract data using the rerddap::tabledap function**  \n\n[to learn more about `rerddap`](https://docs.ropensci.org/rerddap/articles/rerddap.html)\n  \n  Using `rerddap::tabledap` function, we will request and download data with the following specifications:\n  \n* Buoy dataset ID: cwwcNDBCMet\n* Region boundaries: 35 to 40 north latitude and -125 to -120 east longitude  \n* Time span: 08/01/2023 to 08/10/2023\n* Variables:  station, latitude, longitude, time, and water temperature parameters  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subset and download tabular data from ERDDAP \n\nERDDAP_Node = \"https://coastwatch.pfeg.noaa.gov/erddap\"\n\nNDBC_id = 'cwwcNDBCMet'\n\n# Get data information\nNDBC_info=rerddap::info(datasetid = NDBC_id,url = ERDDAP_Node)\n\n# Get data tabledap(url, dataset_id, variables, condition)\nbuoy <- rerddap::tabledap( \n  url = ERDDAP_Node,   \n  NDBC_id,              \n  fields=c('station', 'latitude',  'longitude', 'time', 'wtmp'),   \n  'time>=2023-08-01',   'time<=2023-08-10',   \n  'latitude>=35','latitude<=40', \n  'longitude>=-125','longitude<=-120',\n  'wtmp>0'\n)\n\n#Create data frame with the downloaded data\nbuoy.df <-data.frame(station=buoy$station,\n                     longitude=as.numeric(buoy$longitude),\n                     latitude=as.numeric(buoy$latitude),\n                     time=strptime(buoy$time, \"%Y-%m-%d %H:%M:%S\"),\n                     date=as.Date(buoy$time),\n                     temp=as.numeric(buoy$wtmp))\n\n# Check for unique stations\nunique.sta <- unique(buoy$sta)\nn.sta <- length(unique.sta)\nn.sta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 24\n```\n\n\n:::\n:::\n\n\n\n\n**Plot the buoy data for the first 10 stations in buoy.df**\n  \n  Let's see what the buoy data looks like for our time period.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(buoy.df$time,buoy.df$temp,type='n', xlab='Date', ylab='SST (ºC)',main='SST from the first 10 stations')\n\ncolors = rainbow(10)\nfor (i in 1:10){\n  I=which(buoy.df$station==unique.sta[i])\n  lines(buoy.df$time[I],buoy.df$temp[I], col=colors[i])\n}\n```\n\n::: {.cell-output-display}\n![](images/buoy_plot-1.png){width=672}\n:::\n:::\n\n\n\n**Select buoy data closest in time to satellite data**  \n\nSince buoy data are hourly and the satellite data are daily, the buoy data needs to be averaged daily for each station.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nbuoy.df.day=buoy.df %>%\n  group_by(station, date) %>%\n  summarize(\n    lon=mean(longitude),\n    lat=mean(latitude),\n    temp.day=mean(temp),\n    .groups=\"drop\"\n    )\n\nhead(buoy.df.day)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  station date         lon   lat temp.day\n  <chr>   <date>     <dbl> <dbl>    <dbl>\n1 46013   2023-08-01 -123.  38.2     10.4\n2 46013   2023-08-02 -123.  38.2     10.7\n3 46013   2023-08-03 -123.  38.2     10.6\n4 46013   2023-08-04 -123.  38.2     10.4\n5 46013   2023-08-05 -123.  38.2     10.7\n6 46013   2023-08-06 -123.  38.2     10.6\n```\n\n\n:::\n:::\n\n\n\n## Download Satellite SST (sea surface temperature) data\n\nWe will use Sea surface temperature (SST) satellite data from CoastWatch West code node ERDDAP server.\n\nURL: https://coastwatch.pfeg.noaa.gov/erddap/\nDataset ID:nesdisBLENDEDsstDNDaily \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl=  'https://coastwatch.pfeg.noaa.gov/erddap/'\ndatasetid = 'nesdisBLENDEDsstDNDaily'\n\n# Get Data Information given dataset ID and URL\ndataInfo <- rerddap::info(datasetid, url)\n\n# Show data Info\ndataInfo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<ERDDAP info> nesdisBLENDEDsstDNDaily \n Base URL: https://coastwatch.pfeg.noaa.gov/erddap \n Dataset Type: griddap \n Dimensions (range):  \n     time: (2019-07-22T12:00:00Z, 2025-03-05T12:00:00Z) \n     latitude: (-89.975, 89.975) \n     longitude: (-179.975, 179.975) \n Variables:  \n     analysed_sst: \n         Units: degree_C \n     analysis_error: \n         Units: degree_C \n     mask: \n     sea_ice_fraction: \n         Units: 1 \n```\n\n\n:::\n:::\n\n\n\n**Extract the matchup data using rxtracto**  \n\nWe will extract satellite data for each buoy station.  \n1. get coordinates of each buoy station\n2. use the rxtracto function and the buoy coordinates to download satellite data closest to each station\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set the variable name of interest from the satellite data\nparameter <- 'analysed_sst'\n\n# Set x,y,t,z coordinates based on buoy data\nxcoord <- buoy.df.day$lon\nycoord <- buoy.df.day$lat\ntcoord <- buoy.df.day$date\n\n# Extract satellite data \nextract <- rxtracto(dataInfo, parameter=parameter, \n                    tcoord=tcoord,\n                    xcoord=xcoord,\n                    ycoord=ycoord,\n                    xlen=.01,ylen=.01)\n                     \nbuoy.df.day$sst<-extract$`mean analysed_sst`\n```\n:::\n\n\n\n**Get subset of data where a satellite value was found**  \n\n* Our satellite product is gap-free (gaps due to clouds were filled using some interpolation) but it has a spatial resolution of 5km. Some buoy stations may be so close to shore that they end up in the landmask of the satellite data. So let's find the stations that were matched up to an SST pixel. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get subset of data where there is a satellite value \ngoodbuoy<-subset(buoy.df.day, sst > 0)\nunique.sta<-unique(goodbuoy$station)\nnbuoy<-length(unique.sta)\nndata<-length(goodbuoy$station)\n```\n:::\n\n\n\n## Compare results for satellite and buoy\n* Plot the satellite SST verses the buoy temperature to visualize how well the two datasets match each other.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up map title \nmain=\"California coast, 8/1/23-8/10/23\"   \n\np <- ggplot(goodbuoy, aes(temp.day, sst,color=lat)) + \n     coord_fixed(xlim=c(8,25),ylim=c(8,25)) \np + geom_point() + \n  ylab('Satellite SST')  + \n  xlab('Buoy average daily SST') +\n  scale_x_continuous(minor_breaks = seq(8, 25)) + \n  scale_y_continuous(minor_breaks = seq(8, 25)) + \n  #geom_abline(a=fit[1],b=fit[2]) +\n  #annotation_custom(my_grob) + \n  #scale_color_gradientn(colours = \"viridis\", name=\"Buoy\\nLatitude\") +\n  scale_color_viridis(discrete = FALSE, name=\"Buoy\\nLatitude\") +\n  labs(title=main) + theme(plot.title = element_text(size=20, face=\"bold\", vjust=2)) \n```\n\n::: {.cell-output-display}\n![](images/xyplot-1.png){width=672}\n:::\n:::\n\n\n\nRun a linear regression of Blended SST versus the buoy data. \n* The R squared is close to 1 (0.8733)\n* The slope is 0.7151\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlmHeight = lm(sst~temp.day, data = goodbuoy)\nsummary(lmHeight)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = sst ~ temp.day, data = goodbuoy)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.21936 -0.47676  0.02142  0.40927  2.19949 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.65951    0.27549   13.28   <2e-16 ***\ntemp.day     0.71469    0.01976   36.17   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.7322 on 195 degrees of freedom\nMultiple R-squared:  0.8703,\tAdjusted R-squared:  0.8696 \nF-statistic:  1309 on 1 and 195 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n## Create a map of SST and overlay the buoy data\n**Extract blended SST data for August 1st, 2023**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First define the box and time limits of the requested data \nylim<-c(32,42)\nxlim<-c(-127,-118)\n\n# Extract the monthly satellite data\nSST <- rxtracto_3D(dataInfo,xcoord=xlim,ycoord=ylim,parameter=parameter, \n                   tcoord=c('2023-08-01','2023-08-01'))\n\nSST$sst <- drop(SST$analysed_sst)\n```\n:::\n\n\n\n**Create the map frame for the satellite data and buoy SST overlay**  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapFrame<- function(longitude,latitude,sst){\n  dims<-dim(sst)\n  sst<-array(sst,dims[1]*dims[2])\n  sstFrame<-expand.grid(x=longitude,y=latitude)\n  sstFrame$sst<-sst\n  return(sstFrame)\n}\n\nsstFrame<-mapFrame(SST$longitude,SST$latitude,SST$sst)\ncoast <- map_data(\"worldHires\", ylim = ylim, xlim = xlim)\nmy.col <- colorRampPalette(rev(brewer.pal(11, \"RdYlBu\")))(22-13) \n\nbuoy2<-subset(buoy.df.day, month(date)==8 &day(date)==1 & temp.day > 0)\n```\n:::\n\n\n\n**Create the map**   \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmyplot<-ggplot(data = sstFrame, aes(x = x, y = y, fill = sst)) +\n  geom_tile(na.rm=T) +\n  geom_polygon(data = coast, aes(x=long, y = lat, group = group), fill = \"grey80\") +\n  theme_bw(base_size = 15) + ylab(\"Latitude\") + xlab(\"Longitude\") +\n  coord_fixed(1.3,xlim = xlim, ylim = ylim) +\n  scale_fill_cmocean(name = 'thermal',limits=c(10,25),na.value = NA) +\n  ggtitle(paste(\"Satellite SST and buoy temperature (circles) \\n\", unique(as.Date(SST$time)))) +\n  geom_point(data=buoy2, aes(x=lon,y=lat,color=temp.day),size=3,shape=21,color=\"black\") + \n  scale_color_cmocean(name = 'thermal',limits=c(10,25),na.value =\"grey20\") \n  \nmyplot\n```\n\n::: {.cell-output-display}\n![](images/map-1.png){width=672}\n:::\n:::\n\n\n\n## References:\n- <a href=\"https://coastwatch.pfeg.noaa.gov/data.html\">NOAA CoastWatch Westcoast Node Data Catalog</a>\n- <a href=\"https://www.ndbc.noaa.gov/download_data.php?filename=46259h2017.txt.gz&dir=data/historical/stdme \">NOAA National Data Buoy Center</a>\n- <a href=\"https://docs.ropensci.org/rerddap/\">Rerddap R Package reference</a>\n- <a href=\"https://cran.r-project.org/web/packages/rerddapXtracto/vignettes/UsingrerddapXtracto.html\">rxtracto R Package reference</a>\n",
    "supporting": [
      "matchup_satellite_buoy_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}